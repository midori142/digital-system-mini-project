module setTime(submit, select, Din, En, enSet, selout, Dout);
	input En, enSet, submit;
	input[6:0] Din;
	input[1:0] select;
	output reg[6:0] Dout;
	output reg[1:0] selout;
	
	reg prevSub;
	
	initial begin
		Dout   = 7'bz;
		selout = 2'bz;
		prevSub = submit;
	end
	
	always @(*) begin
		if (En & enSet) begin
			if (prevSub == 1'b0 && submit == 1'b1) begin		// PGT of submit
				Dout = Din;
				selout = select;
			end
		end
		prevSub = submit;
		#5 Dout = 7'bz;
		selout = 2'bz;
	end
endmodule 
module Time(set, select, D, Q);
	input 				set;				// set = 0/1: output/input data.
	input[1:0] 			select;
	input[6:0] 			D;
	output reg[6:0]	Q;
	
	reg[6:0] tR, tY, tG;
	
	initial begin
		tR = 'd35;
		tY = 'd04;
		tG = 'd25;
	end

	always @(*) begin
		case (select)
			2'b00: if (set) tR = D; else Q = tR;
			2'b01: if (set) tY = D; else Q = tY;
			2'b11: if (set) tG = D; else Q = tG;
		endcase
	end
endmodule 
module toLEDR(in, En, LEDR0, LEDR1, LEDR2);
	input[1:0] in;
	input En;
	output reg LEDR0, LEDR1, LEDR2;
	// LEDR2 = RED ... LEDR0 = GREEN
	always @(*) begin
		LEDR2 = En & ~in[1] & ~in[0];
		LEDR1 = En & ~in[1] &  in[0];
		LEDR0 = En &  in[1] &  in[0];
	end
endmodule 