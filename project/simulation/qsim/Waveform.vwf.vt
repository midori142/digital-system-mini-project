// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/17/2018 14:19:22"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          MiniProject
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module MiniProject_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK_50;
reg [0:0] KEY;
reg SW0;
reg SW1;
reg SW2;
reg SW3;
reg SW4;
reg SW5;
reg SW6;
reg SW7;
reg SW8;
reg SW9;
reg SW17;
// wires                                               
wire [0:6] HEX0;
wire [0:6] HEX1;
wire [0:6] HEX4;
wire [0:6] HEX5;
wire [2:0] LEDR;

// assign statements (if any)                          
MiniProject i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK_50(CLOCK_50),
	.HEX0(HEX0),
	.HEX1(HEX1),
	.HEX4(HEX4),
	.HEX5(HEX5),
	.KEY(KEY),
	.LEDR(LEDR),
	.SW0(SW0),
	.SW1(SW1),
	.SW2(SW2),
	.SW3(SW3),
	.SW4(SW4),
	.SW5(SW5),
	.SW6(SW6),
	.SW7(SW7),
	.SW8(SW8),
	.SW9(SW9),
	.SW17(SW17)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK_50
always
begin
	CLOCK_50 = 1'b0;
	CLOCK_50 = #500 1'b1;
	#500;
end 

// KEY
initial
begin
	KEY = 1'b0;
end 

// KEY[0]
initial
begin
	KEY[0] = 1'b0;
end 

// SW0
initial
begin
	SW0 = 1'b0;
end 

// SW1
initial
begin
	SW1 = 1'b0;
end 

// SW2
initial
begin
	SW2 = 1'b0;
end 

// SW3
initial
begin
	SW3 = 1'b0;
end 

// SW4
initial
begin
	SW4 = 1'b0;
end 

// SW5
initial
begin
	SW5 = 1'b0;
end 

// SW6
initial
begin
	SW6 = 1'b0;
end 

// SW7
initial
begin
	SW7 = 1'b0;
end 

// SW8
initial
begin
	SW8 = 1'b0;
end 

// SW9
initial
begin
	SW9 = 1'b0;
end 

// SW17
initial
begin
	SW17 = 1'b1;
end 
endmodule

